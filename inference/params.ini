[DEFAULT]
2PT_FILE = ../generate_sacc/mock_3x2pt_data_vector.sacc

[pipeline]
fast_slow = F
values = values.ini
priors = priors.ini

modules =
    consistency
    camb
    extrapolate
    sacc_nz
    correlated_dz_source
    correlated_dz_lens
    source_photoz_bias
    lens_photoz_bias
    pk_to_cl
    sacc_like

extra_output =
            cosmological_parameters/S_8
            data_vector/2pt_chi2
timing=F
debug=F

[maxlike]
method = bobyqa
max_posterior = T
tolerance = 0.1

[runtime]
resume = T
sampler = nautilus
verbosity = quiet
root = ${CSL_DIR}

[output]
filename = output/chain.txt
format=text
privacy = F

[test]
fatal_errors=T
save_dir= output/test


[nautilus]
filepath = output/nautilus_resume.hdf5
resume = T
verbose = F
;settings below are the ones recommended by Johannes Lange:
n_live = 2000
discard_exploration = T
n_batch = 512
n_networks = 4
n_jobs = 64
;n_jobs should be equal to the number of cores used.



[camb]
file = boltzmann/camb/camb_interface.py
mode = power
feedback=0
AccuracyBoost=1.0
do_tensors = F
do_lensing = F
kmax = 50.0
nk   = 200
NonLinear = pk
neutrino_hierarchy = normal
halofit_version = mead2020_feedback
zmin_background = 0.
zmax_background = 4.
nz_background = 401
kmax_extrapolate = 1000.0


; incompatible with the version used for the VAE.
; so we cannot use this
[cosmopower]
file = ${PWD}/../modules/cosmopower/cosmopower_interface_sigma8.py 
path_2_trained_emulator = ../modules/cosmopower/model
use_specific_k_modes = F 
kmax = 10.0 
kmin = 1e-5 
nk = 200 


[fast_pt]
file = structure/fast_pt/fast_pt_interface.py
do_ia = T
k_res_fac = 0.5
verbose = F


[consistency]
file = utility/consistency/consistency_interface.py


[extrapolate]
file = boltzmann/extrapolate/extrapolate_power.py
kmax = 500.0
nmax = 100

[sacc_nz]
file = number_density/load_nz_sacc/load_nz_sacc.py
nz_file = %(2PT_FILE)s
data_sets = source lens
prefix_extension = T

[correlated_dz_source]
file = number_density/correlated_priors/correlated_priors.py
uncorrelated_parameters = source_dz_uncor/b1 source_dz_uncor/b2 source_dz_uncor/b3 source_dz_uncor/b4 source_dz_uncor/b5 
output_parameters = source_photoz_errors/bias_1 source_photoz_errors/bias_2 source_photoz_errors/bias_3 source_photoz_errors/bias_4 source_photoz_errors/bias_5
covariance = ./source_deltaz_covariance.txt

[correlated_dz_lens]
file = number_density/correlated_priors/correlated_priors.py
uncorrelated_parameters = lens_dz_uncor/b1 lens_dz_uncor/b2 lens_dz_uncor/b3 lens_dz_uncor/b4 lens_dz_uncor/b5 
output_parameters = lens_photoz_errors/bias_1 lens_photoz_errors/bias_2 lens_photoz_errors/bias_3 lens_photoz_errors/bias_4 lens_photoz_errors/bias_5
covariance = ./lens_deltaz_covariance.txt


[source_photoz_bias]
file = number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_source
bias_section = source_photoz_errors
interpolation = linear

[lens_photoz_bias]
file = number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_lens
bias_section = lens_photoz_errors
interpolation = linear

[lens_vae]
file = ${PWD}/../modules/vae/vae_interface.py
output_section = nz_lens
input_section = lens_vae
model_path = ${PWD}/../modules/vae/LENS
latent_size = 5

[source_vae]
file = ${PWD}/../modules/vae/vae_interface.py
output_section = nz_source
input_section = source_vae
model_path = ${PWD}/../modules/vae/SOURCE
latent_size = 5


[source_vae_bias]
file = ...

[lens_vae_bias]
file = ...


[pk_to_cl]
file = structure/projection/project_2d.py
ell_min_logspaced = 20.0
ell_max_logspaced = 3000.0
n_ell_logspaced = 100


; This mode is a fast IA calculation approach, but it only works
; for the NLA model
fast-shear-shear-ia = source-source
fast-lingal-shear-ia = lens-source
; lingal means linearly-biased galaxy samples.
lingal-lingal = lens-lens

verbose = F
get_kernel_peaks=F
verbose=F


[shear_m_bias]
file = shear/shear_bias/shear_m_bias.py
m_per_bin = True
verbose = F

[sacc_like]
file = likelihood/sacc/sacc_like.py
include_norm = F
data_file = %(2PT_FILE)s
data_sets = galaxy_shearDensity_cl_e galaxy_density_cl galaxy_shear_cl_ee
flip = galaxy_shearDensity_cl_e


; only do this if using test sampler!
; save_theory = output/hsc-y3-shear-theory.sacc
; save_realization = output/hsc-y3-shear-sim.sacc
